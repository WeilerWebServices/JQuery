/**
    Transition mixins
**/

.transition-property(...) {
    @props: ~`"@{arguments}".replace(/[\[\]]/g, '')`;
    -webkit-transition-property: @props;
    -moz-transition-property: @props;
    -o-transition-property: @props;
    transition-property: @props;
}

.easing(@easing: ease-in-out) {
    -webkit-transition-timing-function: @easing;
    -moz-transition-timing-function: @easing;
    -o-transition-timing-function: @easing;
    transition-timing-function: @easing;
}

.delay(@time) {
    -webkit-transition-delay: @time;
    -moz-transition-delay: @time;
    -o-transition-delay: @time;
    transition-delay: @time;
}

.duration(@time) {
    -webkit-transition-duration: @time;
    -moz-transition-duration: @time;
    -o-transition-duration: @time;
    transition-duration: @time;
}

/**
    Sprite mixins
**/

.sprite(@name, @width, @height) {
    width:@width * 1px;
    height:@height * 1px;
    position: absolute;
    background:url(~'../sprites/@{name}.png') no-repeat top;
    .interpolation-fix();
}

// Sprite with a number of frames (vertical)
.sprite(@name, @width, @height, @frames) {
    background-position: 0 @height*1px;
    .sprite(@name, @width, @height / @frames);
}

.xy(@left,@top) {
    left: @left * 1px;
    top: @top * 1px;
}

.size(@width, @height) {
    width: @width * 1px;
    height: @height * 1px;
}

/**
    Transform mixins
**/

.rotated(@angle) {
    -webkit-transform:rotate(@angle);
    -moz-transform:rotate(@angle);
    -o-transform:rotate(@angle);
    -ms-transform: rotate(@angle);
    transform:rotate(@angle);
}

.scaled(@scale) {
   -webkit-transform: scale(@scale, @scale);
   -moz-transform: scale(@scale, @scale);
   -o-transform: scale(@scale, @scale);
   -ms-transform: scale(@scale, @scale);
   transform: scale(@scale, @scale);
}

.scaled(@scaleX, @scaleY) {
   -webkit-transform: scale(@scaleX, @scaleY);
   -moz-transform: scale(@scaleX, @scaleY);
   -o-transform: scale(@scaleX, @scaleY);
   -ms-transform: scale(@scaleX, @scaleY);
   transform: scale(@scaleX, @scaleY);
}

.translated(@left, @top) {
    -webkit-transform: translate(@left * 1px, @top * 1px);
    -moz-transform: translate(@left * 1px, @top * 1px);
    -o-transform: translate(@left * 1px, @top * 1px);
    -ms-transform: translate(@left * 1px, @top * 1px);
    transform: translate(@left * 1px, @top * 1px);
}

.mirrored() {
   -webkit-transform: scaleX(-1);
   -moz-transform: scaleX(-1);
   -o-transform: scaleX(-1);
   -ms-transform: scaleX(-1);
   transform: scaleX(-1);
}

.not-mirrored() {
   -webkit-transform: scaleX(1);
   -moz-transform: scaleX(1);
   -o-transform: scaleX(1);
   -ms-transform: scaleX(1);
   transform: scaleX(1);
}

// This fixes animation interpolation on firefox (makes it smooth)
.interpolation-fix() {
    //-moz-transform: rotate(0.0001deg);
    transform: rotate(0.0001deg);
}

// This makes nested animations work correctly
.force-redraw() {
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    -o-transform-style: preserve-3d;
    -ms-transform-style: preserve-3d;
    transform-style: preserve-3d;
}

.top-center-transform-origin() {
    -webkit-transform-origin: center top;
    -moz-transform-origin: center top;
    -o-transform-origin: center top;
    -ms-transform-origin: center top;
    transform-origin: center top;
}

/**
    Animation mixins
**/

.animation(...) {
    -webkit-animation: @arguments;
    -moz-animation: @arguments;
    -o-animation: @arguments;
    animation: @arguments;
}

.animation-duration(@time) {
    -webkit-animation-duration: @time;
    -moz-animation-duration: @time;
    -o-animation-duration: @time;
    animation-duration: @time;
}

.animation-delay(@time) {
    -webkit-animation-delay: @time;
    -moz-animation-delay: @time;
    -o-animation-delay: @time;
    animation-delay: @time;
}

.frame-swap(@height, @percent, @frameA, @frameB) {
    .frame(@height, @percent, @frameA);
    .frame(@height, @percent + 0.001%, @frameB);
}

.frame(@height, @percent, @frame) {
   (~"@{percent}") { .frame-position(@height, @frame); }
}

.frame-position(@height, @frame) {
    background-position: 0 -@height * (@frame - 1) * 1px;
}
